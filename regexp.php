<?php

error_reporting(-1);
//------------------------------------------------------------------------------------------------------------------------//
function isNumbersCorrectTest()
{
    echo "Задача на проверку номера телефона:<br>";
    $inputData = array(
        '8-(800)-555 35 35',
        '8-800-55-535-35',
        '88005553535',
        '02',
        '88005553535 проще позвонить чем у кого-то занимать'
    );

    $regexp = '/^8( +|-+|\\(+|-+\\(+| +-+\\(+)?(\\d{3})( +|-+|\\)+|\\)+-+|\\)+-+ +)?((-+| +)?\\d){7}$/';
//  $regexp = '/^8(( +|-+|\\(+|-+\\(+| +-+\\(+)?(\\d)( +|-+|\\)+|\\)+-+|\\)+-+ +)?){10}$/';// может стоило лучше сделать такой?
    //а вообще, может есть гайдик какой-нибудь как их покрасивее оформлять, а то невозможно читать эти регулярки получается.

    for ($i = 0; $i < count($inputData); $i++) {
        if (preg_match($regexp, $inputData[$i])) {
            echo "{$inputData[$i]} - правильный<br>";
        } else {
            echo "{$inputData[$i]} - неправильный<br>";
        }
    }
}

isNumbersCorrectTest();

echo "<br><br><br>";
//------------------------------------------------------------------------------------------------------------------------//
function isGrammarNaziHappy()
{
    echo "Grammar Nazi:<br>";

    $inputData = "
Привет, анон,сейчас я тебя координально проверю сдесь.Я зделал этот шыкарный текст
просто потому что!Я зделан из жывой плоти но тебя зделаю из мертвой
ты же не против?хм а теперь пока.хотя подожди;я не проверил:точку с запятой и двоеточие.
"; //какой же я аутист, мда.

    echo "Текст:<br>$inputData<br><br>";
    $regexp = '/(.{3,5}((,|;|!|\\?|:)[а-яё\\w]).{3,5})|(.{3,5}((ж|ш)ы).{3,5})|(.{3,5}(координально|сдесь|(здела(л|ю|н))).{3,5})|(.{3,5}( (а|но)( |, |\\. ?)).{3,5})/ui';
    $matches = array();

//    ОП, я устал, я не знаю как это сделать. Оно работает, но не все ошибки находит из-за того что они расположены близко друг к другу, вот. А может и нет, может я чего-то не замечаю.

    $count = preg_match_all($regexp, $inputData, $matches);
    echo "Найдено ошибок: ", $count, "<br>";
    for ($i = 0; $i < count($matches[0]); $i++) {
        echo "Ошибка: {$matches[0][$i]}<br>";
    }
}

isGrammarNaziHappy();

echo "<br><br><br>";
//------------------------------------------------------------------------------------------------------------------------//
//задача на изменение формата номера

function isNumberCorrect($number)
{
    $regexp = '/^(8|\\+7)(( +|-+|\\(+|-+\\(+| +-+\\(+)?(\\d)( +|-+|\\)+|\\)+-+|\\)+-+ +)?){10}$/';
    if (preg_match($regexp, $number)) {
        return true;
    } else {
        return false;
    }
}


function replaceNumber()
{
    $numbers = array(
        '8-911-404-44-11',
        '+7(812)6786767',
        '88005553535 проще позвонить чем у кого-то занимать'
    );

    $regexpPlusSeven = '/^(\\+7)/';

    $regexpSymbols = '/( |-|\\( ?| ?\\))+/';

    $result = array();

    for ($i = 0; $i<count($numbers); $i++)
    {
        echo "Номер: {$numbers[$i]}<br>";
        if (isNumberCorrect($numbers[$i]))
        {
            echo "Номер введен верно.<br>";
            $result[$i] = preg_replace($regexpSymbols, '',$numbers[$i]);
            echo "Убираем лишние символы: {$result[$i]}<br>";
            $result[$i] = preg_replace($regexpPlusSeven, '8', $result[$i]);
            echo "Меняем +7 на 8: {$result[$i]}<br><br>";

            echo "Результат: ", $result[$i], '<br><br>';
        } else
        {
            echo "Номер введен неверно<br>";
        }
    }


}

replaceNumber();















